From c73af2733710e859c13349211cb3edb98e120e30 Mon Sep 17 00:00:00 2001
From: Tom Barron <tpb@dyncloud.net>
Date: Sat, 25 Jul 2015 17:11:29 -0400
Subject: [PATCH 14/17] Fix cleanup_temp_volume_snapshots for missing vol

The cleanup_temp_volume_snapshots method raises an exception that
causes the backup service to exit if there is a backup without a
corresponding volume.

This commit catches these exceptions so that the backup service is
not prevented from starting in this circumstance.

Change-Id: Ia1aac2fe78048df5fce595d5de181cb4930ea78d
Closes-bug: 1478599
(cherry picked from commit 54f97d28b04b996ed1c8e7fa15f1f4d8f3d58c50)

Conflicts:
      cinder/backup/manager.py

(cherry picked from commit d398db507e583f2df6001194eae26f9a1ab1b108)
---
 cinder/backup/manager.py    | 14 ++++++++++----
 cinder/tests/test_backup.py | 17 +++++++++++++++++
 test-requirements.txt       |  1 +
 3 files changed, 28 insertions(+), 4 deletions(-)

diff --git a/cinder/backup/manager.py b/cinder/backup/manager.py
index c5a6f31..34ccd94 100644
--- a/cinder/backup/manager.py
+++ b/cinder/backup/manager.py
@@ -257,10 +257,16 @@ class BackupManager(manager.SchedulerDependentManager):
         # create by the backup job are deleted when service is started.
         ctxt = context.get_admin_context()
         for backup in backups:
-            volume = self.db.volume_get(ctxt, backup['volume_id'])
-            volume_host = volume_utils.extract_host(volume['host'], 'backend')
-            backend = self._get_volume_backend(host=volume_host)
-            mgr = self._get_manager(backend)
+            try:
+                volume = self.db.volume_get(ctxt, backup['volume_id'])
+                volume_host = volume_utils.extract_host(volume['host'],
+                                                        'backend')
+                backend = self._get_volume_backend(host=volume_host)
+                mgr = self._get_manager(backend)
+            except (KeyError, exception.VolumeNotFound):
+                LOG.debug("Could not find a volume to clean up for "
+                          "backup %s.", backup.id)
+                continue
             if backup['temp_volume_id'] and backup['status'] == 'error':
                 temp_volume = self.db.volume_get(ctxt,
                                                  backup['temp_volume_id'])
diff --git a/cinder/tests/test_backup.py b/cinder/tests/test_backup.py
index ef9c5ee..c819f9e 100644
--- a/cinder/tests/test_backup.py
+++ b/cinder/tests/test_backup.py
@@ -17,6 +17,7 @@ Tests for Backup code.
 
 """
 
+import ddt
 import tempfile
 
 import mock
@@ -166,6 +167,7 @@ class BaseBackupTest(test.TestCase):
         return db.backup_create(self.ctxt, backup)['id']
 
 
+@ddt.ddt
 class BackupTestCase(BaseBackupTest):
     """Test Case for backups."""
 
@@ -222,6 +224,21 @@ class BackupTestCase(BaseBackupTest):
         self.assertTrue(mock_delete_volume.called)
         self.assertTrue(mock_delete_snapshot.called)
 
+    @mock.patch.object(db, 'volume_get')
+    @ddt.data(KeyError, exception.VolumeNotFound)
+    def test_cleanup_temp_volumes_snapshots(self,
+                                            err,
+                                            mock_volume_get):
+        """Ensure we handle missing volume for a backup."""
+        mock_volume_get.side_effect = [err]
+
+        backup1_id = self._create_backup_db_entry(status='creating')
+        backup1 = db.backup_get(self.ctxt, backup1_id)
+        backups = [backup1]
+
+        self.assertIsNone(self.backup_mgr._cleanup_temp_volumes_snapshots(
+            backups))
+
     def test_create_backup_with_bad_volume_status(self):
         """Test creating a backup from a volume with a bad status."""
         vol_id = self._create_volume_db_entry(status='restoring', size=1)
diff --git a/test-requirements.txt b/test-requirements.txt
index 5d1d94a..55c2f1d 100644
--- a/test-requirements.txt
+++ b/test-requirements.txt
@@ -1,6 +1,7 @@
 # Install bounded pep8/pyflakes first, then let flake8 install
 hacking>=0.9.2,<0.10
 coverage>=3.6
+ddt>=0.7.0
 discover
 fixtures>=0.3.14
 mock>=1.0
-- 
2.8.1

